<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!--    包扫描  扫描controller包-->
    <context:component-scan base-package="com.gxa.controller,com.gxa.common.config"></context:component-scan>

    <!--    配置前后缀-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:annotation-driven/>

    <!--    配置的跳转路径-->
<!--    <mvc:view-controller path="/" view-name="login"/>-->
<!--    <mvc:view-controller path="/index.html" view-name="login"/>-->


    <!--    静态资源的映射-->
<!--    <mvc:resources mapping="/asserts/**" location="/asserts/"></mvc:resources>-->
    <mvc:resources location="classpath:/META-INF/resources/" mapping="swagger-ui.html"/>
    <mvc:resources location="classpath:/META-INF/resources/webjars/" mapping="/webjars/**"/>


    <!--    拦截器的拦截规则配置-->
    <!--    <mvc:interceptors>-->
    <!--        <mvc:interceptor >-->
    <!--            <mvc:mapping path="/**" />-->
    <!--            <mvc:exclude-mapping path="/"/>-->
    <!--            <mvc:exclude-mapping path="/index.html"/>-->
    <!--            <mvc:exclude-mapping path="/login.html"/>-->
    <!--            <mvc:exclude-mapping path="/user/login"/>-->
    <!--            <mvc:exclude-mapping path="/center.html"/>-->
    <!--            <ref bean="loginInterceptor"></ref>-->
    <!--        </mvc:interceptor>-->
    <!--    </mvc:interceptors>-->

    <!--配置了生命周期的后置处理器，作用是调用IOC容器中的shiro bean的生命周期方法-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--启用了IOC容器中使用shiro的注解，但必须在配置了LifecycleBeanPostProcessor之后才能使用 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>

    <!--    cors跨域支持-->
    <mvc:cors>
        <mvc:mapping path="/**"/>
<!--                     allowed-origins="http://192.16.143.227:63344"-->
<!--                     allowed-methods="GET,POST,PUT,DELETE,OPTIONS"-->
<!--                     allowed-headers="Content-Type,token"-->
<!--                     allow-credentials="true"-->
<!--                     max-age="123" />-->
    </mvc:cors>
</beans>